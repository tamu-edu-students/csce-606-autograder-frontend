<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title><%= content_for(:title) || "Autograder Frontend" %></title>
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>
    <%= stylesheet_link_tag 'application', media: 'all', 'data-turbo-track': 'reload' %>

    <%= yield :head %>

    <link rel="manifest" href="/manifest.json">
    <link rel="icon" href="/icon.png" type="image/png">
    <link rel="icon" href="/icon.svg" type="image/svg+xml">
    <link rel="apple-touch-icon" href="/icon.png">
    <%= javascript_importmap_tags %>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  </head>
  <body>
      
  <%= render 'pages/header' %>
    <div >
      

      <div style="text-align: center">
        <br/>
        <% flash.each do |key, value| %>
          <div class="alert alert-<%= key %>"><%= value %></div>
        <% end %>
        <%= yield %>
      </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
   
   <script>
      function initializeFormValidation() {
        const form = document.querySelector("form[data-new-record='true']");
        if (!form) return; // Exit if the form is not in creation mode

        const testName = document.getElementById("test_name");
        const testPoints = document.getElementById("test_points");
        const testType = document.getElementById("test_type");
        const testTarget = document.getElementById("test_target");
        const targetAsterisk = document.getElementById("target-asterisk");
        const createButton = document.getElementById("create_test_button"); // specifically for "Create Test"

        // Function to check if all required fields are filled
        function checkRequiredFields() {
          const isNameFilled = testName && testName.value.trim() !== "";
          const isPointsFilled = testPoints && testPoints.value.trim() !== "";
          const isTypeSelected = testType && testType.value.trim() !== "";
          const isTargetRequired = testType && !["compile", "memory_errors", "script"].includes(testType.value);
          const isTargetFilled = testTarget && testTarget.value.trim() !== "";

          // Conditionally check Target field based on Test Type
          const allFieldsValid = isNameFilled && isPointsFilled && isTypeSelected &&
                                (!isTargetRequired || isTargetFilled);

          // Enable the button if all required fields are filled
          if (createButton) {
            createButton.disabled = !allFieldsValid;
          }
        }

            // Function to toggle Target field requirement based on Test Type
        function toggleTargetRequirement() {
          if (testType && ["compile", "memory_errors", "script"].includes(testType.value)) {
            // Make Target field optional
            if (testTarget) testTarget.required = false;
            if (targetAsterisk) targetAsterisk.style.display = "none";
          } else {
            // Make Target field required
            if (testTarget) testTarget.required = true;
            if (targetAsterisk) targetAsterisk.style.display = "inline";
          }
          checkRequiredFields(); // Re-check form validity
        }
        // Initial check for Target field requirement
        toggleTargetRequirement();
        // Add event listeners to check fields on change
        if (testName) testName.addEventListener("input", checkRequiredFields);
        if (testPoints) testPoints.addEventListener("input", checkRequiredFields);
        if (testType) testType.addEventListener("change", function() {
          toggleTargetRequirement();
          checkRequiredFields();
        });
        if (testTarget) testTarget.addEventListener("input", checkRequiredFields);
      }
      // Run validation on page load and when Turbo renders or updates the frame
      document.addEventListener("turbo:load", initializeFormValidation);
      document.addEventListener("turbo:frame-render", initializeFormValidation);
    </script>

  </body>
</html>

