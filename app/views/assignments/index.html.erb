<div class="assignments-wrapper">

  <h1>Assignments</h1>

  <div class="flex justify-center">
    <%= render partial: "search/form", locals: { results: [] } %>
  </div>
  
  <div class="assignments-table-container">
  <table id="assignments-table" class="assignments-table">
    <thead>
      <tr>
        <th class="text-left" onclick="sortTable(0)">Assignment Name<span id="arrow-0">&#x25B2;</span></th>
        <th class="text-left" onclick="sortTable(1)">Created On<span id="arrow-1">&#x25B2;</span></th>
        <th class="text-left" onclick="sortTable(2)">Last Updated<span id="arrow-2">&#x25B2;</span></th>
        <th>Actions</th>
      </tr>
    </thead>
    <tbody>
      <% @assignments.each do |assignment| %>
        <tr>
          <td class="text-left"> 
            <%= link_to assignment.repository_name, assignment_path(assignment), class: "btn-link" %>
          </td>
          <td class="text-left"><%= assignment.created_at.strftime("%m-%d-%Y %H:%M") %></td>
          <td class="text-left"><%= assignment.updated_at.strftime("%m-%d-%Y %H:%M") %></td>
          <td>
            <%= link_to 'Export to Gradescope', create_and_download_zip_assignment_path(assignment), class: "btn btn-success" %>
            <%= link_to 'Manage Access', users_assignment_path(assignment), class: "btn btn-secondary" %>
          </td>
        </tr>
      <% end %>
    </tbody>
  </table>

  </div>
  
  <%= link_to 'Create Assignment', new_assignment_path, class: 'btn btn-primary create-assignment-btn' %>
</div>

<script>
  // Function to sort the table when clicking on headers
  let sortDirections = ["asc", "asc", "asc"]; // Store sorting direction for each column
  function sortTable(n) {
    const table = document.getElementById("assignments-table");
    let rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
    switching = true;
    dir = sortDirections[n]; // Use stored sorting direction for the clicked column

    // Clear all arrows and remove highlight from all columns
    for (let j = 0; j < 3; j++) {
      document.getElementById(`arrow-${j}`).innerHTML = dir === "asc" ? "&#x25B2;" : "&#x25BC;";
      Array.from(table.rows).forEach(row => row.cells[j].classList.remove("highlight-column"));
    }

    // Set correct arrow for the clicked column and highlight it
    document.getElementById(`arrow-${n}`).innerHTML = dir === "asc" ? "&#x25B2;" : "&#x25BC;";
    Array.from(table.rows).forEach(row => row.cells[n].classList.add("highlight-column"));
    
    while (switching) {
      switching = false;
      rows = table.rows;

      for (i = 1; i < (rows.length - 1); i++) {
        shouldSwitch = false;
        x = rows[i].getElementsByTagName("TD")[n];
        y = rows[i + 1].getElementsByTagName("TD")[n];

        // Compare values based on column content
        if (n === 1 || n === 2) { // If sorting by date (Created On or Last Updated)
          if (dir === "asc" && new Date(x.innerHTML) > new Date(y.innerHTML)) {
            shouldSwitch = true;
            break;
          } else if (dir === "desc" && new Date(x.innerHTML) < new Date(y.innerHTML)) {
            shouldSwitch = true;
            break;
          }
        } else { // Sorting by name or other text-based columns
          if (dir === "asc" && x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
            shouldSwitch = true;
            break;
          } else if (dir === "desc" && x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
            shouldSwitch = true;
            break;
          }
        }
      }

      if (shouldSwitch) {
        rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
        switching = true;
        switchcount++;
      } else {
        if (switchcount === 0 && dir === "asc") {
          dir = "desc";
          switching = true;
        }
      }
    }

    // Toggle the direction for the next click on this column
    sortDirections[n] = dir === "asc" ? "desc" : "asc";
  }
</script>

<style>
  /* Highlight sorted column */
  .highlight-column {
    background-color: #f0f8ff; /* Light background for sorted column */
  }
  
  /* Left align text */
  .text-left {
    text-align: left;
  }
</style>
