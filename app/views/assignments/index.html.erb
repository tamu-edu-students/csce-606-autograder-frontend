<div class="centered-container">
  <h1>Assignments</h1>
  <div class="assignments-table-container">
    <table id="assignments-table" class="assignments-table">
      <thead>
        <tr>
          <th onclick="sortTable(0)">Assignment Name &#x25B2;&#x25BC;</th>
          <th onclick="sortTable(1)">Created On &#x25B2;&#x25BC;</th>
          <th onclick="sortTable(2)">Last Updated &#x25B2;&#x25BC;</th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody>
        <% @assignments.each do |assignment| %>
          <tr>
            <td><%= assignment.assignment_name %></td>
            <!-- Format the date as month-day-year hour:minute -->
            <td><%= assignment.created_at.strftime("%m-%d-%Y %H:%M") %></td>
            <td><%= assignment.updated_at.strftime("%m-%d-%Y %H:%M") %></td>
            <td>
              <%= link_to 'Edit', edit_assignment_path(assignment), class: "btn btn-primary" %>
              <%= link_to 'Show', assignment_path(assignment), class: "btn btn-secondary" %>
            </td>
          </tr>
        <% end %>
      </tbody>
    </table>
  </div>
  
  <!-- Button to create a new assignment -->
  <%= link_to 'Create Assignment', new_assignment_path, class: 'btn btn-primary create-assignment-btn' %>
</div>

<script>
  // Function to sort the table when clicking on headers
  function sortTable(n) {
    const table = document.getElementById("assignments-table");
    let rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
    switching = true;
    dir = "asc"; // Set the sorting direction to ascending by default

    while (switching) {
      switching = false;
      rows = table.rows;

      for (i = 1; i < (rows.length - 1); i++) {
        shouldSwitch = false;
        x = rows[i].getElementsByTagName("TD")[n];
        y = rows[i + 1].getElementsByTagName("TD")[n];

        // Compare values based on column content
        if (n === 1 || n === 2) { // If sorting by date (Created On or Last Updated)
          if (dir === "asc" && new Date(x.innerHTML) > new Date(y.innerHTML)) {
            shouldSwitch = true;
            break;
          } else if (dir === "desc" && new Date(x.innerHTML) < new Date(y.innerHTML)) {
            shouldSwitch = true;
            break;
          }
        } else { // Sorting by name or other text-based columns
          if (dir === "asc" && x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
            shouldSwitch = true;
            break;
          } else if (dir === "desc" && x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
            shouldSwitch = true;
            break;
          }
        }
      }

      if (shouldSwitch) {
        rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
        switching = true;
        switchcount++;
      } else {
        if (switchcount === 0 && dir === "asc") {
          dir = "desc";
          switching = true;
        }
      }
    }
  }
</script>
