<div class="file-tree-container">
        <h4>File Tree for <strong>/tests</strong> folder <span style="cursor: pointer; color: blue;" onclick="toggleTree()"></span></h4>
        <div id="fileTreeContainer">
          <%= render_file_tree(@directory_structure) %>
        </div>
      </div>
      


      <script>
      const assignmentIdtemp = "<%= @assignment.id %>"; 

      function toggleTree() {
        document.getElementById('fileTreeContainer').classList.toggle('hidden');
      }

      function toggleFolder(element) {
        const childrenContainer = element.parentNode.querySelector('.children-container');
        if (childrenContainer) {
          childrenContainer.classList.toggle('hidden');
          element.classList.toggle('expanded');
        }
      }

      function openFileUpload(element, path) {
        document.getElementById('fileUploadInput').dataset.uploadPath = path;
        document.getElementById('fileUploadInput').click();
      }

      function uploadFile(input) {
              const file = input.files[0];
              const path = input.dataset.uploadPath;

              if (file) {
                  const formData = new FormData();

                
                  const reader = new FileReader();
                  reader.readAsArrayBuffer(file);
                  
                  reader.onload = function () {
                      const binary = reader.result;

                      formData.append('file', new Blob([binary]), file.name); 
                      formData.append('path', path);

                      fetch(`/assignments/${assignmentIdtemp}/upload_file`, {
                          method: 'POST',
                          body: formData,
                          headers: {
                              'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
                          }
                      })
                      .then(response => response.json())
                      .then(data => {
                          if (data.success) {
                              alert('File uploaded successfully!');
                              location.reload();
                          } else {
                              alert(`File upload failed: ${data.error}`);
                          }
                      })
                      .catch(error => {
                          console.error('Error uploading file:', error);
                          alert('File upload failed due to a network error.');
                      });
                  };
              }
      }

    </script>


    <style>
  .file-tree-container {
    border: 1px solid #ccc;
    border-radius: 8px;
    background-color: #F5F5F5;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    max-width: 300px;
    max-height: 400px;
    overflow-y: auto;
    padding: 10px;
    margin-top: 20px;
    font-family: Arial, sans-serif;
  }
  /* Remove bullet points from each item in the file tree */
  .file-tree, .file-tree ul {
    list-style-type: none;
    padding-left: 20px;
    margin: 0;
  }
  /* Container for directory and its children */
  .file-tree .folder {
    margin-top: 5px;
    font-weight: bold;
    cursor: pointer;
  }
  /* Folder toggle */
  .file-tree .folder-name::before {
    content: 'üìÅ';
    padding-right: 5px;
  }
  .file-tree .folder-name.expanded::before {
    content: 'üìÅ';
  }
  .file-tree .folder-name:hover {
    color: blue;
  }
  /* File styling with single icon */
  .file-tree .file-name::before {
    content: 'üìÑ';
    padding-right: 5px;
  }
  /* Indent nested content */
  .children-container {
    padding-left: 20px;
  }
  /* Hide nested content by default */
  .hidden {
    display: none;
  }
  .file-tree-container::-webkit-scrollbar {
    width: 8px;
  }
  .file-tree-container::-webkit-scrollbar-track {
    background: #F1F1F1;
  }
  .file-tree-container::-webkit-scrollbar-thumb {
    background: #888;
    border-radius: 4px;
  }
  .file-tree-container::-webkit-scrollbar-thumb:hover {
    background: #555;
  }
  .children-container.hidden {
    display: none;
  }
  .file-tree .upload-icon {
    margin-left: 10px;
    font-size: 0.9em;
    cursor: pointer;
    color: #666; /* Professional grey color */
  }

  .file-tree .upload-icon:hover {
    color: #007bff; /* Change to blue on hover for a modern look */
  }
</style>
