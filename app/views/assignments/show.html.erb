<%= stylesheet_link_tag 'assignment_show', media: 'all' %>
<h1>Assignment: <%= @assignment.assignment_name %></h1>

<!-- Display tests for the assignment -->
<div class="container" data-assignment-id="<%= @assignment.id %>">
  <div class="row">
    <div id = 'test' class="col-md-6">
      <h2>Tests for <%= @assignment.assignment_name %></h2>
      <div class="scrollable-container">
      <%= form_with model: [@assignment, TestGrouping.new], url: assignment_test_groupings_path(@assignment),
      local: true, html: { class: "d-flex align-items-center new-test-grouping-form" } do |form| %>
      <div class="form-group mb-0" style="margin-right: 10px;">
        <%= form.text_field :name, class: "form-control", placeholder: "New Test Grouping" %>
      </div>
      <button type="submit" class="btn btn-primary align-items-center">
        <span class="plus-button">&#43;</span> <!-- Unicode plus sign -->
      </button>
    <% end %>
        <div class="test-grouping-list" data-controller="test_grouping_card">
          <% if @test_groupings.present? %>
            <% @test_groupings.sort_by(&:position).each do | test_grouping | %>
              <div id="test-grouping-card-<%= test_grouping.id %>" class="test-grouping-card">
              <div class="test-grouping-title"
              data-action="click->test-grouping-#toggleTestGrouping"
              data-test-grouping-id="<%= test_grouping.id %>">
                <% if @editing_test_grouping_id == test_grouping.id %>
                  <!-- If we are editing the current test grouping, show the form -->
                  <%= form_with model: test_grouping, url: assignment_test_grouping_path(@assignment, test_grouping), method: :patch, local: true, remote: true do |form| %>
                    <div class="d-inline-block">
                      <%= form.text_field :name, class: "form-control d-inline", value: test_grouping.name %>
                    </div>
              
                    <!-- Save and Cancel buttons -->
                    <%= form.submit "Save", class: "save-button" %>
                    <button class="btn btn-sm btn-secondary" onclick="window.location.reload()">Cancel</button>
                  <% end %>
                <% else %>
                  <!-- Otherwise, show the test grouping name and the edit/delete buttons -->
                  <%= "#{test_grouping.position}) #{test_grouping.name}" %>
                  
                  <!-- Edit Button - triggers the edit action via AJAX -->
                  <%= button_to "‚úé", edit_assignment_test_grouping_path(@assignment, test_grouping), method: :get, remote: true, format: :js, class: "edit-button" %>
                  
                  <!-- Delete Button -->
                  <%= button_to "x", assignment_test_grouping_path(@assignment, test_grouping), method: :delete, remote: true, format: :js, class: "delete-button" %>
                <% end %>
              </div>

                <div class="test-list" id="test-list-<%= test_grouping.id %>">
                  <% test_grouping.tests.sort_by(&:position).each do | test | %>
                    <div class="test-card" data-test-id="<%= test.id %>">
                      <%= link_to "#{test.position}) #{test.name} (#{test.points} pts.)", assignment_path(@assignment, test_id: test.id), class: "text-link" %>
                    </div>
                  <% end %>
                </div>
              </div>
            <% end %>
          <% else %>
            <p> No tests found for this assignment. </p>
          <% end %>
        </div>
      </div>


      <!-- Link to add a new test -->
      <%= link_to 'Add new test', assignment_path(@assignment, test_id: nil), class: 'btn btn-primary' %>
      <%= link_to 'Create and Download ZIP', create_and_download_zip_assignment_path(@assignment), class: 'btn btn-primary' %>
      <div class="file-tree-container">
        <h4>File Tree for <strong>/tests</strong> folder <span style="cursor: pointer; color: blue;" onclick="toggleTree()"></span></h4>
        <div id="fileTreeContainer">
          <%= render_file_tree(@directory_structure) %>
        </div>
      </div>
      


      <script>
      const assignmentIdtemp = "<%= @assignment.id %>"; 

      function toggleTree() {
        document.getElementById('fileTreeContainer').classList.toggle('hidden');
      }

      function toggleFolder(element) {
        const childrenContainer = element.parentNode.querySelector('.children-container');
        if (childrenContainer) {
          childrenContainer.classList.toggle('hidden');
          element.classList.toggle('expanded');
        }
      }

      function openFileUpload(element, path) {
        document.getElementById('fileUploadInput').dataset.uploadPath = path;
        document.getElementById('fileUploadInput').click();
      }

      function uploadFile(input) {
              const file = input.files[0];
              const path = input.dataset.uploadPath;

              if (file) {
                  const formData = new FormData();

                
                  const reader = new FileReader();
                  reader.readAsArrayBuffer(file);
                  
                  reader.onload = function () {
                      const binary = reader.result;

                      formData.append('file', new Blob([binary]), file.name); 
                      formData.append('path', path);

                      fetch(`/assignments/${assignmentIdtemp}/upload_file`, {
                          method: 'POST',
                          body: formData,
                          headers: {
                              'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
                          }
                      })
                      .then(response => response.json())
                      .then(data => {
                          if (data.success) {
                              alert('File uploaded successfully!');
                              location.reload();
                          } else {
                              alert(`File upload failed: ${data.error}`);
                          }
                      })
                      .catch(error => {
                          console.error('Error uploading file:', error);
                          alert('File upload failed due to a network error.');
                      });
                  };
              }
      }

    </script>


    <style>
  .file-tree-container {
    border: 1px solid #ccc;
    border-radius: 8px;
    background-color: #F5F5F5;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    max-width: 300px;
    max-height: 400px;
    overflow-y: auto;
    padding: 10px;
    margin-top: 20px;
    font-family: Arial, sans-serif;
  }
  /* Remove bullet points from each item in the file tree */
  .file-tree, .file-tree ul {
    list-style-type: none;
    padding-left: 20px;
    margin: 0;
  }
  /* Container for directory and its children */
  .file-tree .folder {
    margin-top: 5px;
    font-weight: bold;
    cursor: pointer;
  }
  /* Folder toggle */
  .file-tree .folder-name::before {
    content: 'üìÅ';
    padding-right: 5px;
  }
  .file-tree .folder-name.expanded::before {
    content: 'üìÅ';
  }
  .file-tree .folder-name:hover {
    color: blue;
  }
  /* File styling with single icon */
  .file-tree .file-name::before {
    content: 'üìÑ';
    padding-right: 5px;
  }
  /* Indent nested content */
  .children-container {
    padding-left: 20px;
  }
  /* Hide nested content by default */
  .hidden {
    display: none;
  }
  .file-tree-container::-webkit-scrollbar {
    width: 8px;
  }
  .file-tree-container::-webkit-scrollbar-track {
    background: #F1F1F1;
  }
  .file-tree-container::-webkit-scrollbar-thumb {
    background: #888;
    border-radius: 4px;
  }
  .file-tree-container::-webkit-scrollbar-thumb:hover {
    background: #555;
  }
  .file-tree .upload-icon {
    margin-left: 10px;
    font-size: 0.9em;
    cursor: pointer;
    color: #666; /* Professional grey color */
  }

  .file-tree .upload-icon:hover {
    color: #007bff; /* Change to blue on hover for a modern look */
  }

  .children-container.hidden {
    display: none;
  }


</style>
    </div>

    <div id = 'test-details' class="col-md-6">
      <!-- Form to create or edit a test -->
      <div id="test-form" class="test-form">
        <h2><%= @test.persisted? ? "Edit Test for Assignment #{@assignment.assignment_name}" : "New Test for Assignment #{@assignment.assignment_name}" %></h2>
        <%= link_to 'Back to Assignment', assignments_path, class: 'btn btn-primary back-btn' %>
        <%= render 'assignments/test_form', assignment: @assignment, test: @test %>
      </div>
    </div>
  </div>
</div>


